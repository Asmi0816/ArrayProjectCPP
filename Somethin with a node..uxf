<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>20</y>
      <w>340</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData : int
- nodePointer : IntNode *
--
+ getNodeData() : int
+ getNodePointer() : IntNode *
+ setNodeData(int value) : void
+ setNodePointer(IntNode * next) : void

+ IntNode() : constructor
+ IntNode(int value) : init
+ IntNode(int value, IntNode * nextNode) : init
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>350</x>
      <y>20</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Aricks mega proj

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>340</y>
      <w>340</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- size : int
- front : IntNode *


--
+ IntNodeArray(int size) : init
+ setAtIndex(int index, int value) : void
+ get FromIndex(int index) : int
+ getSize() : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>20</y>
      <w>350</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>MOdel :: Node&lt;Type&gt;
--

- nodeData : Type
- nodePointer : Node&lt;Type&gt; *

--

+ Node() : init
+ Node(Type value) : init
+ Note(Type data, Node&lt;Type&gt; * pointer) : init

+ getNodeData() : Type
+ getNodePointer() : Node&lt;Type&gt; *
+ setNodeData(Type data) : void
+ setNodePointer(Node&lt;Type&gt; * next) : void
bg=8374633</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1040</x>
      <y>40</y>
      <w>480</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>Model :: Array&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *


--
inits:
+ Array() : init
+ Array(int size) : init

advanced:
+ ~Array&lt;Types&gt;() : deconstructor
+ Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied) : copy constructor

Methods:
+ setAtIndex(int index, Type value) : void
+ getFromIndex(int index) : Type

+ getSize() : int
+ getFrontIndex(int index) : Type
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>150</y>
      <w>220</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>200.0;10.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1040</x>
      <y>400</y>
      <w>500</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *


--
inits:
+ List&lt;Type&gt;() : init
+ List&lt;Type&gt;(const List&lt;Type&gt; &amp; scource)) : copy init
+ ~List&lt;Types&gt;() : deconstructor

Methods:
+ setAtIndex(int index, Type data) : Type
+ addAtIndex(int index, Type value) : void
+ getFromIndex(int index) : Type
+ addFront(Type value) : void
+ addEnd (Type value) : void
+ remove(int index) : Type
+ contains(Type data) : Type
+ getSize() : int
+ getFront() const : Node&lt;Type&gt; *
+ getEnd() const : Node&lt;Type&gt; *
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>160</y>
      <w>220</w>
      <h>420</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>200.0;400.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
